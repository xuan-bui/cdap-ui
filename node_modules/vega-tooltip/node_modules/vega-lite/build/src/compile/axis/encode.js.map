{"version":3,"file":"encode.js","sourceRoot":"","sources":["../../../../src/compile/axis/encode.ts"],"names":[],"mappings":"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","sourcesContent":["import {Axis} from '../../axis';\nimport {Channel, PositionScaleChannel, X} from '../../channel';\nimport {FieldDef, isTimeFieldDef} from '../../fielddef';\nimport {ScaleType} from '../../scale';\nimport {NOMINAL, ORDINAL} from '../../type';\nimport {contains, keys} from '../../util';\nimport {AxisOrient, HorizontalAlign} from '../../vega.schema';\nimport {timeFormatExpression} from '../common';\nimport {UnitModel} from '../unit';\nimport {getAxisConfig} from './config';\n\nexport function labels(model: UnitModel, channel: PositionScaleChannel, specifiedLabelsSpec: any, orient: AxisOrient) {\n  const fieldDef = model.fieldDef(channel) ||\n    (\n      channel === 'x' ? model.fieldDef('x2') :\n      channel === 'y' ? model.fieldDef('y2') :\n      undefined\n    );\n  const axis = model.axis(channel);\n  const config = model.config;\n\n  let labelsSpec: any = {};\n\n  // Text\n  if (isTimeFieldDef(fieldDef)) {\n    const isUTCScale = model.getScaleComponent(channel).get('type') === ScaleType.UTC;\n\n    const expr = timeFormatExpression('datum.value', fieldDef.timeUnit, axis.format, config.axis.shortTimeLabels, config.timeFormat, isUTCScale);\n\n    if (expr) {\n      labelsSpec.text = {signal: expr};\n    }\n  }\n\n  // Label Angle\n  let angle = getAxisConfig('labelAngle', model.config, channel, orient, model.getScaleComponent(channel).get('type'));\n  if (angle === undefined) {\n    angle = labelAngle(axis, channel, fieldDef);\n    if (angle) {\n      labelsSpec.angle = {value: angle};\n    }\n  }\n\n  if (angle !== undefined) {\n    const align = labelAlign(angle, orient);\n    if (align) {\n      labelsSpec.align = {value: align};\n    }\n\n    labelsSpec.baseline = labelBaseline(angle, orient);\n  }\n\n  labelsSpec = {\n    ...labelsSpec,\n    ...specifiedLabelsSpec\n  };\n\n  return keys(labelsSpec).length === 0 ? undefined : labelsSpec;\n}\n\nexport function labelBaseline(angle: number, orient: AxisOrient) {\n  if (orient === 'top' || orient === 'bottom') {\n    if (angle <= 45 || 315 <= angle) {\n      return {value: orient === 'top' ? 'bottom' : 'top'};\n    } else if (135 <= angle && angle <= 225) {\n      return {value: orient === 'top' ? 'top': 'bottom'};\n    } else {\n      return {value: 'middle'};\n    }\n  } else {\n    if ((angle <= 45 || 315 <= angle) || (135 <= angle && angle <= 225)) {\n      return {value: 'middle'};\n    } else if (45 <= angle && angle <= 135) {\n      return {value: orient === 'left' ? 'top' : 'bottom'};\n    } else {\n      return {value: orient === 'left' ? 'bottom' : 'top'};\n    }\n  }\n}\n\nexport function labelAngle(axis: Axis, channel: Channel, fieldDef: FieldDef<string>) {\n  if (axis.labelAngle !== undefined) {\n    // Make angle within [0,360)\n    return ((axis.labelAngle % 360) + 360) % 360;\n  } else {\n    if (channel === X && contains([NOMINAL, ORDINAL], fieldDef.type)) {\n      return 270;\n    }\n  }\n  return undefined;\n}\n\nexport function labelAlign(angle: number, orient: AxisOrient): HorizontalAlign {\n  angle = ((angle % 360) + 360) % 360;\n  if (orient === 'top' || orient === 'bottom') {\n    if (angle % 180 === 0) {\n      return 'center';\n    } else if (0 < angle && angle < 180) {\n      return orient === 'top' ? 'right' : 'left';\n    } else {\n      return orient === 'top' ? 'left' : 'right';\n    }\n  } else {\n    if ((angle + 90) % 180 === 0) {\n      return 'center';\n    } else if (90 <= angle && angle < 270) {\n      return orient === 'left' ? 'left' : 'right';\n    } else {\n      return orient === 'left' ? 'right' : 'left';\n    }\n  }\n}\n\n"]}